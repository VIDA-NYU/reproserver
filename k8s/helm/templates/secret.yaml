{{- if .Values.secret.create }}
apiVersion: v1
kind: Secret
metadata:
  name: "{{ .Values.secret.name | default (include "reproserver.fullname" .) }}"
  labels:
    {{- include "reproserver.labels" . | nindent 4 }}
type: Opaque
data:
  {{- /* Retrieve existing secret */}}
  {{- $secret := (lookup "v1" "Secret" .Release.Namespace (.Values.secret.name | default (include "reproserver.fullname" .))) | default dict }}

  {{- /* Set $connectionToken to existing data or generate a random password */}}
  {{- $connectionToken := (get (get $secret "data" | default dict) "connectionToken") | default (randAlphaNum 32 | b64enc) }}
  connectionToken: {{ $connectionToken | quote }}

  {{- /* Set $debugPassword to existing data or generate a random password */}}
  {{- $debugPassword := (get (get $secret "data" | default dict) "debugPassword") | default (randAlphaNum 32 | b64enc) }}
  debugPassword: {{ $debugPassword | quote }}
{{- end }}

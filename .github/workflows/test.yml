name: Test

on:
  push:
  pull_request:
  schedule:
    - cron: "25 3 * * 3"

jobs:
  checks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - uses: actions/setup-python@v1
        with:
          python-version: "3.8"
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          $HOME/.local/bin/poetry config virtualenvs.create false
      - name: Install dependencies
        run: $HOME/.local/bin/poetry install --no-interaction
      - name: flake8
        run: flake8 --ignore=E731,W503,W504 reproserver tests
      - name: Unit tests
        run: TESTS_DIR=tests/unit python tests

  check-k8s:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install kubeconform
        run: |
          curl -Lo /tmp/kubeconform.tar.gz https://github.com/yannh/kubeconform/releases/download/v0.4.7/kubeconform-linux-amd64.tar.gz
          tar -xf /tmp/kubeconform.tar.gz -C /usr/local/bin
          rm /tmp/kubeconform.tar.gz
      - name: Check k8s config files using kubeconform
        run: kubeconform --kubernetes-version 1.20.7 --strict --summary $(find k8s -maxdepth 1 -name \*.yml -not -name \*.values.yml)

  test:
    runs-on: ubuntu-latest
    env:
      DOCKER_BUILDKIT: "1"
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - uses: actions/setup-python@v1
        with:
          python-version: "3.8"
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          $HOME/.local/bin/poetry config virtualenvs.create false
      - name: Install dependencies
        run: $HOME/.local/bin/poetry install --no-interaction
      - name: Install kind
        run: |
          sudo mkdir -p /usr/local/bin
          sudo curl -Lo /usr/local/bin/kind https://github.com/kubernetes-sigs/kind/releases/download/v0.11.1/kind-linux-amd64
          sudo chmod +x /usr/local/bin/kind
          sudo curl -Lo /usr/local/bin/kubectl https://dl.k8s.io/release/v1.21.3/bin/linux/amd64/kubectl
          sudo chmod +x /usr/local/bin/kubectl
      - name: Start Kubernetes-in-Docker cluster
        run: |
          kind create cluster --config=kind.yml
          kubectl describe node
          kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v0.45.0/deploy/static/provider/kind/deploy.yaml
      - name: Build image
        run: |
          docker build -t reproserver_web .
          kind load docker-image reproserver_web
      - name: Start reproserver on Kubernetes
        run: |
          helm install reproserver k8s/helm --namespace default -f k8s/minikube.values.yml
          # Wait for the pods to be available
          if ! kubectl wait --timeout=10m --for=condition=Available deploy --all; then
            kubectl get pod
            exit 1
          fi
          export WEB_URL=http://localhost:8000
          # Wait a little bit more until the web server replies
          slept=0; while [ $(curl -s -o /dev/null -w "%{http_code}" $WEB_URL/) != 200 ]; do
            if [ $slept -gt 300 ]; then
              echo "web didn't come up after ${slept}s"
              exit 1
            fi
            sleep 5; slept=$((slept + 5))
          done
          echo "web came up after ${slept}s"
          curl -I -X GET $WEB_URL/
      - name: Run integration tests
        run: |
          if ! TESTS_DIR=tests/integ WEB_URL=http://localhost:8000 python tests; then
            kubectl logs deploy/web 2>&1
            exit 1
          fi
